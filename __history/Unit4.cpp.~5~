//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit4.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm4 *Form4;
//---------------------------------------------------------------------------
__fastcall TForm4::TForm4(TComponent* Owner)
	: TForm(Owner)
{
	RichEdit1->Text = "";
	RichEdit2->Text = "";
	RichEdit3->Text = "";
	RichEdit4->Text = "";
}


String limpiarCadena(String mensaje){
	String resultado = "";
	mensaje = mensaje.UpperCase();
	String c = " ";
	for(int i = 1; i <= mensaje.Length(); i++){
		c = mensaje[i];
		if(c >= "A" && c <= "Z"){
		   resultado = resultado + c;
		}else{
			if(c == "Á"){
				resultado = resultado + "A";
			}else{
				if(c == "É"){
					resultado = resultado + "E";
				}else{
					if(c == "Í"){
						resultado = resultado + "I";
					}else{
						if(c == "Ó"){
							resultado = resultado + "O";
						}else{
							 if(c == "Ú" || c == "Ü"){
								resultado = resultado + "U";
							}else{
								if(c == "Ñ"){
									resultado = resultado + "Ñ";
								}
							}
						}
					}
				}
			}
		}
	}

	return resultado;

}

String limpiarCadenaI(String mensaje){
	String resultado = "";
	mensaje = mensaje.UpperCase();
	String c = " ";
	for(int i = 1; i <= mensaje.Length(); i++){
		c = mensaje[i];
		if(c >= "A" && c <= "Z"){
		   resultado = resultado + c;
		}else{
			if(c == "Á"){
				resultado = resultado + "A";
			}else{
				if(c == "É"){
					resultado = resultado + "E";
				}else{
					if(c == "Í"){
						resultado = resultado + "I";
					}else{
						if(c == "Ó"){
							resultado = resultado + "O";
						}else{
							 if(c == "Ú" || c == "Ü"){
								resultado = resultado + "U";
							}else{
								if(c == "Ñ"){
									resultado = resultado + "N";
								}
							}
						}
					}
				}
			}
		}
	}

	return resultado;

}

//---------------------------------------------------------------------------
void __fastcall TForm4::Cifrar1Click(TObject *Sender)
{
	//Cifrado monoalfabetica (Afin)  a = 11  b = 3

	String algo = RichEdit1->Text;
	algo = limpiarCadena(algo);
	String alfabeto = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ";
	String a = "";
	int posLetra = 0;
	int nuevaPos = 0;

	for(int i = 1; i <= algo.Length(); i++){

		posLetra = alfabeto.Pos(algo[i]);
		if(posLetra > 0){
			// formula = ((m * a )+ b) mod 27
			// se agrego el -1 y +1 debido a que el lenguaje no trabaja desde el indice 0
			nuevaPos = (((posLetra - 1) * 11) + 3) % 27 + 1;

			a = a + alfabeto[nuevaPos];
		}
	}

	RichEdit2->Text =  a;
}
//---------------------------------------------------------------------------
void __fastcall TForm4::Descifrar1Click(TObject *Sender)
{
	//Descifrado monoalfabetica (Afin) b = 3  inv(a,27) = 5
	String algo = RichEdit2->Text;
	RichEdit3->Text = algo;
	algo = limpiarCadena(algo);

	String alfabeto = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ";

	String a = "";
	int posLetra = 0;
	int nuevaPos = 0;

	for(int i = 1; i <= algo.Length(); i++){
		posLetra = alfabeto.Pos(algo[i]);
		if(posLetra > 0){
			// formula = ((posCifrado - b ) * inv(a,27)) mod 27
			// se agrego el -1 y +1 debido a que el lenguaje no trabaja desde el indice 0
			nuevaPos = (((posLetra - 3 - 1) * 5) % 27) + 1;

			//caso especial... en caso de que posCifrado sea menor que "b" (b = 3) se debe sumarle +27
			if(posLetra < 4) nuevaPos = (((posLetra + (-3 + 27 - 1)) * 5) % 27) + 1;
			a = a + alfabeto[nuevaPos];
		}
	}

	RichEdit4->Text = a;
}
//---------------------------------------------------------------------------
void __fastcall TForm4::Cifrar2Click(TObject *Sender)
{
	// Cifrado Polialfabetica
	String texto = RichEdit1->Text;
	texto = limpiarCadena(texto);

	String alfabeto = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ";

	String cifrado = "";
	int posLetra = 0;
	int nuevaPos = 0;
	int desplazamiento1 = StrToInt(InputBox("Ingresar desplazamiento", "Desplazamiento 1", "1"));
	int desplazamiento2 = StrToInt(InputBox("Ingresar desplazamiento", "Desplazamiento 2", "1"));

	for(int i = 1; i <= texto.Length(); i++){
		if (i % 2 == 1) {
			posLetra = alfabeto.Pos(texto[i]);
			nuevaPos = ((posLetra + desplazamiento1 - 1) % 27) + 1;
			cifrado = cifrado + alfabeto[nuevaPos];
		}else{
			posLetra = alfabeto.Pos(texto[i]);
			nuevaPos = ((posLetra + desplazamiento2 - 1) % 27) + 1;
			cifrado = cifrado + alfabeto[nuevaPos];
		}
	}

	RichEdit2->Text = cifrado;
}
//---------------------------------------------------------------------------
void __fastcall TForm4::Descifrar2Click(TObject *Sender)
{
	//Descifrado Polialfabetica
	String texto = RichEdit2->Text;
	RichEdit3->Text = texto;
	texto = limpiarCadena(texto);
	String alfabeto = "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ";

	String descifrado = "";
	int posLetra = 0;
	int nuevaPos = 0;

	int desplazamiento1 = StrToInt(InputBox("Ingresar desplazamiento", "Desplazamiento 1", "1"));
	int desplazamiento2 = StrToInt(InputBox("Ingresar desplazamiento", "Desplazamiento 2", "1"));

	for(int i = 1; i <= texto.Length(); i++){
		if (i % 2 == 1) {
			posLetra = alfabeto.Pos(texto[i]);
			nuevaPos = ((posLetra - desplazamiento1 + 27 - 1) % 27) + 1;
			descifrado = descifrado + alfabeto[nuevaPos];
		}else {
			posLetra = alfabeto.Pos(texto[i]);
			nuevaPos = ((posLetra - desplazamiento2 + 27 - 1) % 27) + 1;
			descifrado = descifrado + alfabeto[nuevaPos];
		}

	}

	RichEdit4->Text = descifrado;
}
//---------------------------------------------------------------------------
